
@charset "UTF-8";



@import '../core/_mixin.scss';
@import './scss/mixin.scss'; 
@import './scss/variable.scss';

:host{
    font-size: 0;
    display: inline-block;
}

.switch {
    @include box-sizing;
    outline: none;
    text-align: left;
    transition: all .3s cubic-bezier(.78, .14, .15, .86);
    overflow: hidden;
    cursor: pointer;

    &:after {
        content: " ";
        transition: all .4s cubic-bezier(.78, .14, .15, .86);
        transform-origin: left center;
    }

    &-medium {
        @include bounding($switch-size-m-width, $switch-size-m-trigger, $switch-border-width-container, $switch-border-width-trigger, $switch-size-m-radius-container, $switch-size-m-radius-trigger);
    }

    &-small {
        @include bounding($switch-size-s-width, $switch-size-s-trigger, $switch-border-width-container, $switch-border-width-trigger, $switch-size-s-radius-container, $switch-size-s-radius-trigger);
    }

    &-on {
        background-color: $switch-normal-on-bg-color;
        &:after {
            box-shadow: $switch-on-shadow;
            background-color: $switch-normal-on-trigger-bg-color;
            border-color: $switch-handle-on-border-color;
        }
        > .switch-children {
            left: calc(#{$switch-text-on-left} + #{$switch-border-width-container} * 2);
            color: $switch-normal-on-color-font;
        }

        &:focus,
        &:hover {
            background-color: $switch-hover-on-bg-color;
            &:after {
                background-color: $switch-hover-on-trigger-bg-color;
            }
        }
    }

    &-on#{&}-small {
        > .switch-children {
            left: calc(#{$switch-size-s-text-on-left} + #{$switch-border-width-container} * 2);
        }
    }
    &-on[disabled] {
        background-color: $switch-disabled-on-bg-color;
        cursor: not-allowed;

        &:after {
            right: 0;
            box-shadow: $switch-on-shadow;
            background-color: $switch-disabled-on-trigger-bg-color;
            border-color: $switch-handle-disabled-border-color;
        }

        > .switch-children {
            color: $switch-disabled-on-color-font;
        }
    }
    &-off {
        background-color: $switch-normal-off-bg-color;
        border-color: $switch-normal-off-border-color;

        &:focus,
        &:hover {
            background-color: $switch-hover-off-bg-color;
            border-color: $switch-hover-off-border-color;
        }

        &:after {
            left: 0;
            transform: translateX(0);
            box-shadow: $switch-on-shadow;
            background-color: $switch-normal-off-trigger-bg-color;
            border-color: $switch-handle-off-border-color;
            &:focus,
            &:hover {
                background-color: $switch-hover-off-trigger-bg-color;
            }
        }
        > .switch-children {
            right: calc(#{$switch-text-off-right} + #{$switch-border-width-container} * 2);
            color: $switch-normal-off-color-font;
        }
    }
    &-off[disabled] {
        background-color: $switch-disabled-off-bg-color;
        border: 1px solid transparent;
        cursor: not-allowed;
        &:after {
            box-shadow: $switch-off-shadow;
            background-color: $switch-disabled-off-trigger-bg-color;
            border-color: $switch-handle-disabled-border-color;
        }
        > .switch-children {
            color: $switch-disabled-off-color-font;
        }
    }
    &-off#{&}-small {
        > .switch-children {
            right: $switch-size-s-text-off-right + $switch-border-width-container;
        }
    }
}
